import { responseHelper } from '../utils/response.helper.js';
import httpStatus from 'http-status';
const transFormFiles = (files) => {
    const transformedObject = files.reduce((result, file) => {
        if (!result[file.fieldname]) {
            result[file.fieldname] = [];
        }

        const fileObject = {
            originalname: file.originalname,
            encoding: file.encoding,
            mimetype: file.mimetype,
            destination: file.destination,
            filename: file.filename,
            path: file.path,
            size: file.size,
        };

        result[file.fieldname].push(fileObject);

        return result;
    }, {});

    return transformedObject;
};

/**
 * handle errors generated by multer
 * @param {function} multerFunction
 * @returns {next}
 */
export default function handleMulterErrors(multerFunction) {
    return (req, res, next) => {
        multerFunction(req, res, (err) => {
            if (err) {
                return responseHelper(
                    res,
                    httpStatus.NOT_ACCEPTABLE,
                    true,
                    `multer error: ` + err.message
                );
            }
            req.files = req.files ? transFormFiles(req.files) : {};
            next();
        });
    };
}
